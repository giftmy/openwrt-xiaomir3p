name: xiaomi_r3p

on:
  schedule:
    - cron: 0 20 * * *
  push:
    branches: 
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v1
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          
    
    
    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede.git
        REPO_BRANCH: master
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
    - name: Add new feed from lienol
      run: cd openwrt && sed -i '$asrc-git lienol https://github.com/Lienol/openwrt-package' feeds.conf.default
    
    
    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.17.2
      env:
        GITHUB_TOKEN: ${{ secrets.token }}
        WITH_V: true
    
      
    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a
    
    - name: Costom configure file
      run: |
          cd openwrt
          rm -f .config
          cp ../xiaomi_r3p .config
          
    - name: Make Defconfig
      run: |
          cd openwrt
          make defconfig
    - name: Make download
      run: |
          cd openwrt
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
    - name: Multi-thread compile
      run: |
          cd openwrt
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s
    - name: Single-thread compile
      if: failure()
      run: |
          cd openwrt
          make -j1 V=s
    - name: Assemble artifact
      run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find openwrt/bin/targets/ -name "*sysupgrade*bin*" | xargs -i mv -f {} ./artifact/sysupgrade.bin
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.token }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./artifact/
        asset_name: sysupgrade.bin
        asset_content_type: application/zip
    
          

          
    #- name: Upload artifact
    #  uses: actions/upload-artifact@master
    #  with:
    #    name: OpenWrt firmware
    #    path: ./artifact/
    #- name: copy file via ssh password
    #  uses: appleboy/scp-action@master
    #  with:
    #    host: ${{ secrets.ssh_host }}
    #    username: ${{ secrets.ssh_user }}
    #    password: ${{ secrets.ssh_pass }}
    #    port: ${{ secrets.ssh_port }}
    #    source: "./artifact"
    #    target: "/tmp"
    - name: executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@master
      
      with:
        host: ${{ secrets.ssh_host }}
        username: ${{ secrets.ssh_user }}
        password: ${{ secrets.ssh_pass }}
        port: ${{ secrets.ssh_port }}
        script: |
          curl -o /tmp/sysupgrade.zip {{steps.upload-release-asset.browser_download_url}} #sysupgrade -v /tmp/artifact/openwrt-ramips-mt7621-xiaomi_mir3p-squashfs-sysupgrade.bin &
          unzip /tmp/sysupgrade.zip -d /tmp
          sysupgrade -v /tmp sysupgrade.bin
        
        
    
